<?php

namespace classes;


class Registration extends DB{

  public $db, $pass, $login, $repeatPassword;
//------------------------------------------------- 
  public function  __construct() {
    $this->db = parent:: __construct();   
  }
//-------------------------------------------------  
  public function registr($data){
    $this->pass = $data['password'];
    $this->login = $data['login'];
    $this->repeatPassword = $data['repeatPassword'];
    return $this->validate();    
  }    
//------------------------------------------------- 
  private function validate(){
    //Проверка кол-ва введенных символов
    if($this->pass == $this->repeatPassword){
      $lenLogin = strlen($this->login);
      $lenPass = strlen($this->pass);
      //Проверка на совпадение паролей
      if($lenLogin <= 20 && $lenLogin >=6){
        if($lenPass <= 20 && $lenPass >=6){
          //Проверка на существование аккаунта  
          //$param3 = "SELECT * FROM `hovers` WHERE hover > '$time'";           
          //$param =  "SELECT name FROM `users` WHERE  name = '$this->login'";       
          $count = $this->db->query("SELECT COUNT(id) FROM `Users` WHERE name= '$this->login'")->fetchColumn();
          if($count == false){
            $this->dbReg();         
          }else{  
            return "Логин занят";       
          }  
        }else{
          return "Пароль не корректный!";
        }      
      }else{
        return "Логин не корректный!";
      }
    }else{
      return "Пароли не совпадают! Попробуйте еще раз.";
    }      
    //сделать проверку на разнообразие символов используя pregmatch
  } 
//------------------------------------------------- 
  public function dbReg(){

    //запрос на создание аккаунта
    $param = "INSERT INTO Users (login, name, surname, patronymic, phone, typeactivit, pass) VALUES ('$this->login', '$this->name', '$this->surname', '$this->patronymic', '$this->phone', '$this->typeactivit', '$this->pass',)";
    try{
      $ex = $this->db->prepare($param);
      $ex->execute();
      $count = $ex->rowCount();	
      if(0 === $count){}
      elseif(1 ===$count){  
        $_SESSION['user'] = $this->login;
        $this->loged();
      }
    }
    catch(PDOException $e){  echo $e;}  
  }
//------------------------------------------------- 
  public function loged(){
    if(isset( $_SESSION['user'])){
      header('Location: http://sitestart/loged');
    }
    else{
      header('Location: http://sitestart/registration');
    }
  }
//------------------------------------------------- 
}
